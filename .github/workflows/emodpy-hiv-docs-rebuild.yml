# This workflow will rebuild emodpy-hiv Docs triggered when changes to rst, python, or requirements.txt files occur.
# Integrated with AZURE Static Site and BLOB Storage.
# It treats failures as warnings to build as many docs as possible.
# If triggered from a PR: It pushes the resulting link to the PR itself.

name: Rebuild hiv Docs
on:
  push:
    paths: 
      - '**.py'
      - '**/*docs/**'
      - '**/requirements.txt'

  pull_request:
    branches:
      - '*'  

jobs:
  emodpy-hiv-Docs-Preview:
    env:
      SUBFOLDER_NAME: 'docs/_build/html'
      BLOB_ENDPOINT: 'https://idmdocsstaging.z5.web.core.windows.net'
      REPO_IDENTIFIER: 'idm/${{github.repository}}'   
      BLOB_CONTAINER_NAME: '$web'
      INDEX_HTML: 'index.html'

    runs-on: ubuntu-latest
    steps:
    - name: Repo Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.inputs.branch }} 

    # Environment Setup
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
          python-version: 3.9
          
    - name: Install emodpy-hiv requirements
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt --index-url=https://packages.idmod.org/api/pypi/pypi-production/simple

    - name: Install the emodpy-hiv package
      run: |
        pip install -e . --index-url=https://packages.idmod.org/api/pypi/pypi-production/simple

    - name: Install documentation build requirements
      run: |
        pip install -r docs/requirements.txt --index-url=https://packages.idmod.org/api/pypi/pypi-production/simple

    - name: Build docs - html - no break
      id: build-docs
      working-directory: 'docs'
      run: |
        make clean
        make htmlnobreak
        
    # # On Failure: STEP REMOVED - we will generate the links despite the results of the build.
    # - name: If the build step failed
    #   if: ${{ failure() && steps.build-docs.conclusion == 'failure' }}
    #   run: |
    #     echo "Your build has failed, no link will be generated"
    #     echo "LINK_URL='No link has been generated'" >> $GITHUB_ENV
    #     echo "BLOB_MESSAGE='Only docs folder files were moved to the Storage Account'" >> $GITHUB_ENV
        
    # 
    # Generates Unique folder name
    - name: Get current date to generate partial url link
      id: date
      run: |
        echo "::set-output name=getdate::$(TZ='America/Los_Angeles' date +'%B %d %H:%M:%S')"        
        echo "THIS_RUN=$(TZ='America/Los_Angeles' date +'%B%d-%H%M%S')" >> $GITHUB_ENV
        
    # if: ${{steps.build-docs.outcome}} == 'success'       # Removing filter to generate link only for successful builds.
    
    - name: Create staging documents URL
      run: |
        echo "Your Documents are ready!"
        echo "BLOB_MESSAGE='The full Docs folder and resulting build were moved to the Storage Account. This is your link:'" >> $GITHUB_ENV
        echo "DESTINATION_PATH=${BLOB_CONTAINER_NAME}/${REPO_IDENTIFIER}/${{env.THIS_RUN}}/${SUBFOLDER_NAME}" >> $GITHUB_ENV
        echo "LINK_URL=${BLOB_ENDPOINT}/${REPO_IDENTIFIER}/${{env.THIS_RUN}}/${SUBFOLDER_NAME}/${INDEX_HTML}" >> $GITHUB_ENV

    # Provides the final link to the publicly accessible files.
    - name: YOUR LINK
      run: |
        echo "${{ env.LINK_URL }}"

    # AZURE LOGIN:
    - name: Azure login
      uses: azure/login@v1
      with:
          creds: ${{ secrets.BLOB_JSON_SERVICE_PRINCIPAL_CREDENTIALS }} 
          
    # AZURE UPLOAD:
    - name: Upload to blob storage under $web
      if: always()
      uses: azure/CLI@v1
      with:
        inlineScript: |
            az storage blob upload-batch -s ${SUBFOLDER_NAME} --account-name idmdocsstaging  --auth-mode key -d ${DESTINATION_PATH}
            
    # AZURE PURGE CDN
    - name: Purge CDN endpoint
      if: always()
      uses: azure/CLI@v1
      with:
          inlineScript: |
               az cdn endpoint purge --content-paths  "/*" --profile-name "idmdocs-cdn-webprofile" --name "idmdocs-cdn-webendpoint" --resource-group "IDMDocsPreviewGroup"
    # Azure logout
    - name: logout
      if: always()    
      run: |
            az logout

    # Updates PR
    - name: Updates PR
      if: always()
      uses: mshick/add-pr-comment@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          message: |
            ${{ steps.date.outputs.getdate }} - Run Id: ${{github.run_id}} **[->> Link to documents preview](${{ env.LINK_URL }})**